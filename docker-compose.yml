services:
  web:
    build: .
    volumes:
      - ./agate:/agate
    working_dir: /agate
    links:
      - db_service
      - phonyx_service
    depends_on:
      db_service:
        condition: service_healthy
      
    environment:
      - SECRET_KEY=zbfj^u2!7-7(k6u0crkz#@v+=vd8+iyu+)9u+v^$8p5fon1_+3
      - HOST_NAME=127.0.0.1
      - DATABASE_NAME=db_service_test
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db_service
      - ONYX_DOMAIN=http://phonyx_service:80
      - CORS_ALLOWED_ORIGINS=http://localhost:5173/
    command: >
      bash -c "python manage.py makemigrations agate &&
               python manage.py migrate &&
               python manage.py check &&
               python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8001:8000

  phonyx_service:
    image: python:3.9
    environment:
      - TOKEN=57f6bf4c44231155def6ad9e8cf072b71c2a782fd228686df94cf195b08ce7cc
    volumes:
      - ./phonyx:/phonyx
    working_dir: /phonyx
    command: >
      bash -c "pip install --no-cache-dir --upgrade fastapi[standard] &&
               fastapi run main.py --port 80" 
    ports:
      - 8002:80

  db_service:
    image: postgres:13-alpine
    user: postgres
    volumes:
      - db_service_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=db_service_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 5

volumes:
  db_service_data: