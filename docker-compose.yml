services:
  web:
    build: .
    volumes:
      - ./agate:/agate
      - ./ansible:/ansible
    working_dir: /ansible
    links:
      - rabbitmq_service
      - db_service
      - phonyx_service
    depends_on:
      db_service:
        condition: service_healthy
      rabbitmq_service:
        condition: service_healthy
      
    command: >
      bash -c "./ansible.sh 01_requirements.yaml &&
               ./ansible.sh 02_database.yaml &&
               ./ansible.sh 03_host.yaml &&
               cd ../agate &&
               source /tmp/venv/bin/activate &&
               gunicorn --bind 0.0.0.0:8000  core.wsgi"
    ports:
      - 8001:8000

  phonyx_service:
    image: python:3.9
    environment:
      - TOKEN=57f6bf4c44231155def6ad9e8cf072b71c2a782fd228686df94cf195b08ce7cc
    volumes:
      - ./phonyx:/phonyx
    working_dir: /phonyx
    command: >
      bash -c "pip install --no-cache-dir --upgrade fastapi[standard] &&
               fastapi run main.py --port 80" 
    ports:
      - 8002:80

  rabbitmq_service:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq_service_data:/var/lib/rabbitmq/
        - rabbitmq_service_log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 10s
      timeout: 10s
      retries: 5


  db_service:
    image: postgres:13-alpine
    user: postgres
    volumes:
      - db_service_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=db_service_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 5

volumes:
  rabbitmq_service_data:
  rabbitmq_service_log:
  db_service_data: